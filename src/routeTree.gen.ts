/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as SettingsImport } from './routes/settings'
import { Route as SearchImport } from './routes/search'
import { Route as LayoutImport } from './routes/_layout'
import { Route as PostIndexImport } from './routes/post/index'
import { Route as SettingsSettingsidImport } from './routes/settings.$settingsid'
import { Route as PostPostidImport } from './routes/post/$postid'
import { Route as LayoutUserIndexImport } from './routes/_layout/user/index'
import { Route as PostPostPostidImport } from './routes/post/post.$postid'
import { Route as LayoutUserUsernameImport } from './routes/_layout/user/$username'

// Create Virtual Routes

const AboutLazyImport = createFileRoute('/about')()
const IndexLazyImport = createFileRoute('/')()

// Create/Update Routes

const AboutLazyRoute = AboutLazyImport.update({
  path: '/about',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/about.lazy').then((d) => d.Route))

const SettingsRoute = SettingsImport.update({
  path: '/settings',
  getParentRoute: () => rootRoute,
} as any)

const SearchRoute = SearchImport.update({
  path: '/search',
  getParentRoute: () => rootRoute,
} as any)

const LayoutRoute = LayoutImport.update({
  id: '/_layout',
  getParentRoute: () => rootRoute,
} as any)

const IndexLazyRoute = IndexLazyImport.update({
  path: '/',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/index.lazy').then((d) => d.Route))

const PostIndexRoute = PostIndexImport.update({
  path: '/post/',
  getParentRoute: () => rootRoute,
} as any)

const SettingsSettingsidRoute = SettingsSettingsidImport.update({
  path: '/$settingsid',
  getParentRoute: () => SettingsRoute,
} as any)

const PostPostidRoute = PostPostidImport.update({
  path: '/post/$postid',
  getParentRoute: () => rootRoute,
} as any)

const LayoutUserIndexRoute = LayoutUserIndexImport.update({
  path: '/user/',
  getParentRoute: () => LayoutRoute,
} as any)

const PostPostPostidRoute = PostPostPostidImport.update({
  path: '/post/post/$postid',
  getParentRoute: () => rootRoute,
} as any)

const LayoutUserUsernameRoute = LayoutUserUsernameImport.update({
  path: '/user/$username',
  getParentRoute: () => LayoutRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexLazyImport
      parentRoute: typeof rootRoute
    }
    '/_layout': {
      id: '/_layout'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof LayoutImport
      parentRoute: typeof rootRoute
    }
    '/search': {
      id: '/search'
      path: '/search'
      fullPath: '/search'
      preLoaderRoute: typeof SearchImport
      parentRoute: typeof rootRoute
    }
    '/settings': {
      id: '/settings'
      path: '/settings'
      fullPath: '/settings'
      preLoaderRoute: typeof SettingsImport
      parentRoute: typeof rootRoute
    }
    '/about': {
      id: '/about'
      path: '/about'
      fullPath: '/about'
      preLoaderRoute: typeof AboutLazyImport
      parentRoute: typeof rootRoute
    }
    '/post/$postid': {
      id: '/post/$postid'
      path: '/post/$postid'
      fullPath: '/post/$postid'
      preLoaderRoute: typeof PostPostidImport
      parentRoute: typeof rootRoute
    }
    '/settings/$settingsid': {
      id: '/settings/$settingsid'
      path: '/$settingsid'
      fullPath: '/settings/$settingsid'
      preLoaderRoute: typeof SettingsSettingsidImport
      parentRoute: typeof SettingsImport
    }
    '/post/': {
      id: '/post/'
      path: '/post'
      fullPath: '/post'
      preLoaderRoute: typeof PostIndexImport
      parentRoute: typeof rootRoute
    }
    '/_layout/user/$username': {
      id: '/_layout/user/$username'
      path: '/user/$username'
      fullPath: '/user/$username'
      preLoaderRoute: typeof LayoutUserUsernameImport
      parentRoute: typeof LayoutImport
    }
    '/post/post/$postid': {
      id: '/post/post/$postid'
      path: '/post/post/$postid'
      fullPath: '/post/post/$postid'
      preLoaderRoute: typeof PostPostPostidImport
      parentRoute: typeof rootRoute
    }
    '/_layout/user/': {
      id: '/_layout/user/'
      path: '/user'
      fullPath: '/user'
      preLoaderRoute: typeof LayoutUserIndexImport
      parentRoute: typeof LayoutImport
    }
  }
}

// Create and export the route tree

export const routeTree = rootRoute.addChildren({
  IndexLazyRoute,
  LayoutRoute: LayoutRoute.addChildren({
    LayoutUserUsernameRoute,
    LayoutUserIndexRoute,
  }),
  SearchRoute,
  SettingsRoute: SettingsRoute.addChildren({ SettingsSettingsidRoute }),
  AboutLazyRoute,
  PostPostidRoute,
  PostIndexRoute,
  PostPostPostidRoute,
})

/* prettier-ignore-end */

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/_layout",
        "/search",
        "/settings",
        "/about",
        "/post/$postid",
        "/post/",
        "/post/post/$postid"
      ]
    },
    "/": {
      "filePath": "index.lazy.tsx"
    },
    "/_layout": {
      "filePath": "_layout.tsx",
      "children": [
        "/_layout/user/$username",
        "/_layout/user/"
      ]
    },
    "/search": {
      "filePath": "search.tsx"
    },
    "/settings": {
      "filePath": "settings.tsx",
      "children": [
        "/settings/$settingsid"
      ]
    },
    "/about": {
      "filePath": "about.lazy.tsx"
    },
    "/post/$postid": {
      "filePath": "post/$postid.tsx"
    },
    "/settings/$settingsid": {
      "filePath": "settings.$settingsid.tsx",
      "parent": "/settings"
    },
    "/post/": {
      "filePath": "post/index.tsx"
    },
    "/_layout/user/$username": {
      "filePath": "_layout/user/$username.tsx",
      "parent": "/_layout"
    },
    "/post/post/$postid": {
      "filePath": "post/post.$postid.tsx"
    },
    "/_layout/user/": {
      "filePath": "_layout/user/index.tsx",
      "parent": "/_layout"
    }
  }
}
ROUTE_MANIFEST_END */
